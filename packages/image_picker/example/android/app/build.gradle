def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 26
    testOptions.unitTests.includeAndroidResources = true

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "io.flutter.plugins.imagepicker.example"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

flutter {
    source '../..'
}

configurations.all {
    //制使用某个版本的依赖，若需强制多个依赖，可以逗号分割，
    resolutionStrategy.force 'com.android.support:support-fragment:26.0.0',
            'com.android.support:recyclerview-v7:26.0.0',
            'com.android.support:appcompat-v7:26.0.0',
            'com.android.support:support-core-ui:26.0.0',
            'com.android.support:support-core-utils:26.0.0',
            'com.android.support:support-compat:26.0.0',
            'com.android.support:support-annotations:26.0.0',
            'com.android.support:support-vector-drawable:26.0.0'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.17.0'
//    androidTestImplementation 'androidx.test:runner:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    testImplementation "org.robolectric:robolectric:4.3.1"

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '26.0.0'
                }
            }
        }
    }
}
