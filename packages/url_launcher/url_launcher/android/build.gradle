group 'io.flutter.plugins.urllauncher'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 16
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}

configurations.all {
    //制使用某个版本的依赖，若需强制多个依赖，可以逗号分割，
    resolutionStrategy.force 'com.android.support:support-fragment:26.0.0',
            'com.android.support:recyclerview-v7:26.0.0',
            'com.android.support:appcompat-v7:26.0.0',
            'com.android.support:support-core-ui:26.0.0',
            'com.android.support:support-core-utils:26.0.0',
            'com.android.support:support-compat:26.0.0',
            'com.android.support:support-annotations:26.0.0',
            'com.android.support:support-vector-drawable:26.0.0'
}

dependencies {
    compileOnly 'com.android.support:support-annotations:26.0.0'
//    compileOnly 'androidx.annotation:annotation:1.0.0'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'org.mockito:mockito-core:1.10.19'
//    testImplementation 'androidx.test:core:1.0.0'
//    testImplementation 'org.robolectric:robolectric:4.3'
}

// TODO(mklim): Remove this hack once androidx.lifecycle is included on stable. https://github.com/flutter/flutter/issues/42348
afterEvaluate {
    def containsEmbeddingDependencies = false
    for (def configuration : configurations.all) {
        for (def dependency : configuration.dependencies) {
            if (dependency.group == 'io.flutter' &&
                dependency.name.startsWith('flutter_embedding') &&
                dependency.isTransitive())
            {
                containsEmbeddingDependencies = true
                break
            }
        }
    }
    if (!containsEmbeddingDependencies) {
        android {
            dependencies {
                def lifecycle_version = "1.1.1"
                compileOnly "android.arch.lifecycle:runtime:$lifecycle_version"
                compileOnly "android.arch.lifecycle:common:$lifecycle_version"
                compileOnly "android.arch.lifecycle:common-java8:$lifecycle_version"
            }
        }
    }
}